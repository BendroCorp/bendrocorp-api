name: Ruby

on:
  push:
    branches: [ master ]

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*    

env:
  # Name of docker image
  IMAGE_NAME: bendrocorp-api-v1

jobs:
  master-build:

    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    steps:
    - name: Allow unsecure commands - cause we have to...
      run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # required for dokku
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
      with:
        ruby-version: 2.6.5
    - name: Install dependencies
      run: bundle install
    #- name: Run tests
    #  run: bundle exec rake

    - name: Build image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/bendrocorp/$IMAGE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

    - name: Switch env to production
      run: echo "RAILS_ENV=production" >> $GITHUB_ENV

    - name: Check ImageMagick policy (temp)
      run: convert -version && cat /etc/ImageMagick-6/policy.xml | grep HTTPS

    - name: Fix ImageMagick Policy (temp)
      run: sudo sed -i -e 's/\<policy domain=\"delegate\" rights=\"none\" pattern=\"HTTPS\" \/>/\<policy domain=\"delegate\" rights=\"write\" pattern=\"HTTPS\" \/>\/g' /etc/ImageMagick-6/policy.xml

    - name: Re-Check ImageMagick policy (temp)
      run: cat /etc/ImageMagick-6/policy.xml | grep HTTPS

    - name: Run Migrations
      run: rails db:migrate
    
    - name: Update Deployment Version
      run: |
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        # Update deployment file w/Docker Version
        sed -i 's/latest/'"$VERSION"'/' ./k8/bendro_api_v1_api_deployment.yml
    - name: Cat Deployment
      run: cat ./k8/bendro_api_v1_api_deployment.yml

    - name: Set up kubectl
      uses: matootie/dokube@v1.3.3
      with:
        personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
        clusterName: bubble-kube-2

    # apply ymls
    # make sure any deployment changes are applied
    - name: Apply Deployment for API
      run: kubectl apply -f ./k8/bendro_api_v1_api_deployment.yml

    # make sure any deployment changes are applied
    - name: Apply Service
      run: kubectl apply -f ./k8/bendro_api_v1_api_service.yml

    # TODO: Need deployments for sidekiq and rpush
    - name: Apply Deployment for Sidekiq
      run: kubectl apply -f ./k8/bendro_api_v1_sidekiq_deployment.yml

    - name: Apply Deployment for rpush
      run: kubectl apply -f ./k8/bendro_api_v1_rpush_deployment.yml

    - name: Re-deploy pods for API deployment
      run: kubectl rollout restart deployment bendro-api-v1-deployment

    - name: Re-deploy pods for Sidekiq deployment
      run: kubectl rollout restart deployment bendro-sidekiq-v1-deployment

    - name: Re-deploy pods for rpush deployment
      run: kubectl rollout restart deployment bendro-rpush-v1-deployment

    # - name: Push to Dokku
    #   uses: obrassard/action-dokku-push@v1.0.2
    #   with:
    #     # The dokku app's git repository url (in SSH format)
    #     dokku_repo: ${{ secrets.dokkuRepo }}
    #     # A private SSH key that has push acces to your Dokku instance
    #     ssh_key: ${{ secrets.dokkuPrivateKey }}
    #     # The branch to be deployed when pushing to Dokku (default: master)
    #     deploy_branch: master # optional, default is master
    - name: Discord Notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@0.0.2
      with:
        args: 'BendroCorp/bendrocorp-api has been deployed to the app server.'
